{"version":3,"file":"index.24c5c08c40a3afb38489.js","mappings":"yBA+OA,MA1Oa,KAiCPA,KAAKC,UA3BQ,mgDAmCFC,SAASC,eAAe,YAAtC,MACMC,EAAUF,SAASC,eAAe,cAClCE,EAASH,SAASC,eAAe,aACjCG,EAAQJ,SAASC,eAAe,YAChCI,EAAcL,SAASC,eAAe,kBACtCK,EAAgBN,SAASC,eAAe,cACxCM,EAAYP,SAASC,eAAe,gBAI1C,IAAIO,EAAgB,EAcpB,SAASC,IAENN,EAAOJ,UAAY,GACnBM,EAAYN,UAAY,GACxBO,EAAcP,UAAY,GAkB7B,SAASW,IAEN,MAAM,SAAEC,EAAF,QAAYC,EAAZ,QAAqBC,GAAYC,GAAGN,GAsB1C,IAAIO,EApBJX,EAAMY,UAAUC,IAAI,mBAEpBd,EAAOe,mBAAmB,aAAcP,GAExCC,EAAQO,SAAQ,CAACC,EAAQC,KACtB,MAAMC,EAAgBV,EAAQC,EAAU,GAGlCU,EAAiB,4HAAH,OAFCF,EAAQ,EAET,2BAGiEC,EAHjE,6GAIkCF,EAJlC,qGASpBf,EAAYmB,mBAAmB,aAAcD,MAK7CR,EADmB,IAAlBP,EACsB,8QAMA,2PAM1BF,EAAckB,mBAAmB,aAAcT,GAkFlD,SAASU,EAAaC,GAEnB,MAAMC,EAAiBb,GAAGc,OAAS,EAE/BpB,IAAkBmB,GACnBnB,IACAqB,YAAW,KACRpB,IACAC,MACA,MAEHmB,YAAW,KACRpB,IACWqB,MACX,KAtKTrB,IAGAH,EAAcyB,iBAAiB,SAsF/B,SAAqBC,GAElB,MAAMC,EAAc5B,EAAY6B,cAAc,+BAC9C,IAAIC,EACAb,EAEJ,IAAKW,EACF,OAEAE,EAAaF,EAAYG,mBAAmBC,YAC5Cf,EAAgBW,EAAYK,aAAa,QAG5C,MAAMR,EAAM,CACTK,WAAYA,EACZb,cAAeA,IAGZ,QAAET,GAAYC,GAAGN,GAEjB+B,EAAyBN,EAAYK,aAAa,SAC/BE,OAAOD,KAEP1B,GAEtB4B,EAGHnC,EAAc4B,cAAc,wBAAwBlB,UAAUC,IAAI,SAElE,WAEG,MAAMyB,EAAelC,EAAgB,EAC/BmC,EAAaD,EAAe5B,GAAGc,OAAS,IAExCgB,EAAgBrC,EAAU2B,cAAc,kBAC9CU,EAAcC,MAAMC,MAAQH,EAAa,IAEjBpC,EAAU2B,cAAc,oBAChCa,SAChB,MAAMC,EAAyB,4EAAH,OAEyBN,EAFzB,wCAEqE5B,GAAGc,OAFxE,qCAK5BrB,EAAUiB,mBAAmB,aAAcwB,GAM9CC,GACAxB,EAAaK,GAEb1B,EAAMY,UAAUC,IAAI,oBACpBb,EAAM2B,iBAAiB,gBAAgB,KACpC3B,EAAMY,UAAU+B,OAAO,0BA7I7B3C,EAAM2B,iBAAiB,SAwEvB,SAAsBC,GAEfA,EAAMkB,OAAOC,QAAQ,0BACtB7C,EAAc4B,cAAc,wBAAwBlB,UAAUC,IAAI,UAC5C,IAAlBT,GACDF,EAAc4B,cAAc,wBAAwBlB,UAAUC,IAAI,oBAAqB,sBAAuB,qBA5EvHP,IAiBsBV,SAASoD,gBAAgBC,aAC1B,OACfnD,EAAQoD,OAAOhD,GACfA,EAAcU,UAAUC,IAAI,eC/ErCjB,SAAS+B,iBAAiB,oBAAqBC,IAC5CuB,O","sources":["webpack://quizapp/./dev/pages/Quiz/Quiz.js","webpack://quizapp/./dev/app.js"],"sourcesContent":["\nimport './Quiz.scss'\n\n// Quiz Page\n// Страница Викторины\nconst Quiz = () => {\n\n   // function Render of Quiz page\n   // функция Визуализация страницы викторины\n   function renderPage() {\n\n      const html = `\n      \n         <main class=\"quiz__page\" id=\"quizPage\">\n            <div class=\"quiz__page-container\">\n               <header class=\"quiz__header header-quiz\" id=\"quizHeader\">\n                  <div class=\"header-quiz__arrowback unselectable\">\n                     <img class=\"arrowback-back\" src=\"./components/Quiz/images/arrow-back.svg\" alt=\"arrowback\">\n                  </div>\n                  <div class=\"header-quiz__progress unselectable\" id=\"quizProgress\">\n                     <div class=\"progress-number\"><span class=\"left\">0</span> <span class=\"right\">/4</span></div>\n                     <div class=\"progress-line\"></div>\n                  </div>\n               </header>\n               <div class=\"quiz__container animate__animated animate__faster animate__fadeIn\" id=\"quizContainer\">\n                  <div class=\"quiz__list list-quiz animate__animated animate__faster\" id=\"quizList\">\n                     <div class=\"list-quiz__title\" id=\"quizTitle\">question?</div>\n                     <div class=\"list-quiz__option list-option\" id=\"quizListOption\"></div>\n                     <div class=\"list-quiz__answer answer-quiz\" id=\"quizAnswer\">\n                     <button class=\"answer-quiz__button\" id=\"quizAnswerButton\"><span class=\"answer-button__title\">answer</span> <span class=\"answer-button__icon\"><img src=\"./components/Quiz/images/next.svg\" alt=\"next\"></span></button>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </main>\n   \n      `;\n\n      ROOT.innerHTML = html\n\n   }\n\n   renderPage() // Render of Quiz page // Визуализация страницы викторины\n\n   // Getting DOM Elements\n   // Получение DOM-элементов\n   const $page = document.getElementById('quizPage')\n   const $header = document.getElementById('quizHeader')\n   const $title = document.getElementById('quizTitle')\n   const $list = document.getElementById('quizList')\n   const $optionList = document.getElementById('quizListOption')\n   const $answerButton = document.getElementById('quizAnswer')\n   const $progress = document.getElementById('quizProgress')\n\n   // Setting Default Values\n   // Настройка значений по умолчанию\n   let questionIndex = 0\n   let score = 0\n   let answersArr = []\n\n   clearContent() // clearText and HTML // Чистим текст и HTML\n   // Adding Listener to button that will check the Answers\n   // Добавление прослушивателя на кнопку, которая проверит ответы\n   $answerButton.addEventListener('click', checkAnswer)\n   $list.addEventListener('click', activeAnswer)\n   renderQuestion() // Rendering first question // Рендеринг первого вопроса\n   dynamicAdapt()\n\n   // function that clearText and HTML\n   // Функция, что чистит ТЕКСТ и HTML\n   function clearContent() {\n\n      $title.innerHTML = ''\n      $optionList.innerHTML = ''\n      $answerButton.innerHTML = ''\n\n   }\n\n   // Moving Elements according screen size  \n   // Движущиеся элементы в соответствии с размером экрана  \n   function dynamicAdapt() {\n\n      const innerWidth = document.documentElement.clientWidth\n      if (innerWidth <= 1280) {\n         $header.append($answerButton)\n         $answerButton.classList.add('_adaptive')\n      }\n\n   }\n\n   // Consistent rendering of each question\n   // Последовательный рендеринг каждого вопроса\n   function renderQuestion() {\n\n      const { question, answers, correct } = db[questionIndex]\n\n      $list.classList.add('animate__fadeIn')\n\n      $title.insertAdjacentText('afterbegin', question)\n\n      answers.forEach((option, index) => {\n         const correctAnswer = answers[correct - 1]\n         const correctIndex = index + 1\n\n         const optionTemplate = `\n         \n            <label class=\"list-option__item\">\n               <input class=\"list-option__radio\" data-value=\"${correctIndex}\" data-correct=\"${correctAnswer}\" type=\"radio\" name=\"quiz-options\">\n               <div class=\"list-option__button unselectable\">${option}</div>\n               <div class=\"list-option__shadow\"></div>\n            </label>\n\n         `;\n         $optionList.insertAdjacentHTML('afterbegin', optionTemplate)\n      })\n\n      let answerButtonTemplate\n      if (questionIndex === 0) {\n         answerButtonTemplate = `\n\n            <button class=\"answer-quiz__button\" id=\"quizAnswerButton\" style=\"opacity: 0\"><span class=\"answer-button__title\">next</span> <span class=\"answer-button__icon\"><img src=\"./components/Quiz/images/next.svg\" alt=\"next\"></span></button>\n        \n         `;\n      } else {\n         answerButtonTemplate = `\n\n            <button class=\"answer-quiz__button\" id=\"quizAnswerButton\"><span class=\"answer-button__title\">next</span> <span class=\"answer-button__icon\"><img src=\"./components/Quiz/images/next.svg\" alt=\"next\"></span></button>\n        \n         `;\n      }\n      $answerButton.insertAdjacentHTML('afterbegin', answerButtonTemplate)\n\n   }\n\n   // Dynamic behaviour of elements\n   // Динамическое поведение элементов\n   function activeAnswer(event) {\n\n      if (event.target.matches('.list-option__button')) {\n         $answerButton.querySelector('.answer-quiz__button').classList.add('_ready')\n         if (questionIndex === 0) {\n            $answerButton.querySelector('.answer-quiz__button').classList.add('animate__animated', 'animate__backInLeft', 'animate__fast')\n         } \n      }\n\n   }\n\n   //Checking answer\n   //Проверка ответа\n   function checkAnswer(event) {\n\n      const radioButton = $optionList.querySelector('input[type=\"radio\"]:checked')\n      let userAnswer\n      let correctAnswer\n\n      if (!radioButton) {\n         return\n      } else {\n         userAnswer = radioButton.nextElementSibling.textContent\n         correctAnswer = radioButton.getAttribute('name')\n      }\n\n      const obj = {\n         userAnswer: userAnswer,\n         correctAnswer: correctAnswer\n      }\n\n      const { correct } = db[questionIndex]\n\n      const valueRadioButtonString = radioButton.getAttribute('value')\n      const valueRadioButton = Number(valueRadioButtonString)\n\n      if (valueRadioButton !== correct) {\n      } else {\n         score++\n      }\n\n      $answerButton.querySelector('.answer-quiz__button').classList.add('_next')\n\n      function progressCalc() {\n\n         const currentIndex = questionIndex + 1\n         const percentage = currentIndex / db.length * 100\n\n         const $progressLine = $progress.querySelector('.progress-line')\n         $progressLine.style.width = percentage + '%'\n\n         const $progressNumber = $progress.querySelector('.progress-number')\n         $progressNumber.remove()\n         const progressNumberTemplate = `\n         \n            <div class=\"progress-number\"><span class=\"left\">${currentIndex}</span> <span class=\"right\">/${db.length}</span></span></div>\n\n         `;\n         $progress.insertAdjacentHTML('afterbegin', progressNumberTemplate)\n\n         return $progressLine\n\n      }\n\n      progressCalc()\n      nextQuestion(obj)\n\n      $list.classList.add('animate__fadeOut')\n      $list.addEventListener('animationend', () => {\n         $list.classList.remove('animate__fadeOut')\n      })\n\n   }\n\n   //Rendering next question\n   //Рендеринг следующего вопроса\n   function nextQuestion(answersArr) {\n\n      const questionLenght = db.length - 1\n\n      if (questionIndex !== questionLenght) {\n         questionIndex++\n         setTimeout(() => {\n            clearContent()\n            renderQuestion()\n         }, 500)\n      } else {\n         setTimeout(() => {\n            clearContent()\n            showResult(obj)\n         }, 1000)\n      }\n\n   }\n\n   function showResult(answersArr) {\n      \n\n\n   }\n\n}\n\nexport default Quiz;\n","\nimport Quiz from './pages/Quiz/Quiz.js'\nimport './style.scss'\n\n// Loading Page\n// Загрузка страницы\ndocument.addEventListener('DOMContentLoaded', (event) => {\n   Quiz()\n})"],"names":["ROOT","innerHTML","document","getElementById","$header","$title","$list","$optionList","$answerButton","$progress","questionIndex","clearContent","renderQuestion","question","answers","correct","db","answerButtonTemplate","classList","add","insertAdjacentText","forEach","option","index","correctAnswer","optionTemplate","insertAdjacentHTML","nextQuestion","answersArr","questionLenght","length","setTimeout","obj","addEventListener","event","radioButton","querySelector","userAnswer","nextElementSibling","textContent","getAttribute","valueRadioButtonString","Number","score","currentIndex","percentage","$progressLine","style","width","remove","progressNumberTemplate","progressCalc","target","matches","documentElement","clientWidth","append","Quiz"],"sourceRoot":""}